{"version":3,"sources":["webpack://gatsby-starter-advanced/./src/components/SearchForm/SearchForm.jsx","webpack://gatsby-starter-advanced/./src/templates/modulelist.jsx"],"names":["query","filter","Form","role","method","Row","form","id","Col","md","FormGroup","Label","for","Input","type","name","bsSize","aria-controls","onChange","e","navigate","location","pathname","encodeURIComponent","target","value","placeholder","Button","color","size","props","data","pageContext","moduleCurrentPage","moduleNumPages","postEdges","allMarkdownRemark","edges","DATA","moduleList","prefix","isFirst","isLast","prevPage","toString","nextPage","useState","isShown","setIsShown","results","setResults","srcLocation","window","search","searchQuery","URLSearchParams","get","filterTag","escapeRegExp","string","replace","useEffect","module","searchRgx","RegExp","tagRgx","tags","match","title","className","Helmet","config","SEO","SearchResult","PostListing","Link","to","rel"],"mappings":"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","file":"component---src-templates-modulelist-jsx-8eb7e12ac5cd7e204b4b.js","sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\n\nconst SearchForm = ({ query, filter }) => (\n  <Form role=\"search\" method=\"GET\">\n    <Row form id=\"search-form\">\n      <Col md=\"2\">\n        <FormGroup>\n          <Label for=\"searchFilter\">\n            <h6>Filter</h6>\n          </Label>\n          <Input\n            type=\"select\"\n            name=\"filter\"\n            id=\"search-tag\"\n            bsSize=\"lg\"\n            aria-controls=\"search-results-count\"\n            onChange={e =>\n              navigate(\n                `${\n                  location.pathname\n                }?keywords=${query}&filter=${encodeURIComponent(\n                  e.target.value\n                )}`\n              )\n            }\n            value={filter}\n          >\n            <option value=\"\">All</option>\n            <option value=\"gameplay\">Gameplay</option>\n            <option value=\"logic\">Logic</option>\n          </Input>\n        </FormGroup>\n      </Col>\n      <Col md=\"8\">\n        <FormGroup>\n          <Label for=\"searchQuery\">\n            <h6>Search</h6>\n          </Label>\n          <Input\n            type=\"search\"\n            id=\"search-input\"\n            name=\"keywords\"\n            bsSize=\"lg\"\n            aria-controls=\"search-results-count\"\n            onChange={e =>\n              navigate(\n                `${location.pathname}?keywords=${encodeURIComponent(\n                  e.target.value\n                )}&filter=${filter}`\n              )\n            }\n            placeholder=\"Search...\"\n            value={query}\n          />\n        </FormGroup>\n      </Col>\n      <Col md=\"2\">\n        <Button type=\"submit\" color=\"primary\" size=\"lg\" id=\"search-btn\">\n          Search\n        </Button>\n      </Col>\n    </Row>\n  </Form>\n);\n\nexport default SearchForm;\n","import React, { useState, useEffect } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport SearchForm from \"../components/SearchForm/SearchForm\";\nimport SearchResults from \"../components/SearchResult/SearchResult\";\nimport config from \"../../data/SiteConfig\";\nimport moduleList from \"../generated/module-result.json\";\n\nconst modulelist = (\n  { data, pageContext: { moduleCurrentPage, moduleNumPages } },\n  props\n) => {\n  const postEdges = data.allMarkdownRemark.edges;\n  const DATA = moduleList;\n\n  const prefix = \"/modules/\";\n  const isFirst = moduleCurrentPage === 1;\n  const isLast = moduleCurrentPage === moduleNumPages;\n  const prevPage =\n    moduleCurrentPage - 1 === 1 ? \"\" : (moduleCurrentPage - 1).toString();\n  const nextPage = (moduleCurrentPage + 1).toString();\n\n  const [isShown, setIsShown] = useState(false);\n\n  const [results, setResults] = useState([]);\n  // eslint-disable-next-line react/destructuring-assignment\n  let srcLocation = props.location;\n  if (typeof window !== `undefined`) {\n    // eslint-disable-next-line no-restricted-globals\n    srcLocation = location.search;\n  }\n  const searchQuery = new URLSearchParams(srcLocation).get(\"keywords\") || \"\";\n  var filterTag = new URLSearchParams(srcLocation).get(\"filter\") || \"\";\n  function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n\n  useEffect(() => {\n    if (searchQuery || filterTag) {\n      setResults(\n        DATA.filter((module) => {\n          const searchRgx = new RegExp(escapeRegExp(searchQuery), \"gi\");\n          const tagRgx = new RegExp(escapeRegExp(filterTag), \"gi\");\n          return module.tags.match(tagRgx) && module.title.match(searchRgx);\n        })\n      );\n      setIsShown(true);\n    } else {\n      setResults([]);\n      setIsShown(false);\n    }\n  }, [srcLocation]);\n\n  return (\n    <Layout>\n      <div className=\"index-container\">\n        <Helmet title={`Modules | ${config.siteTitle}`} />\n        <SEO />\n        <SearchForm query={searchQuery} filter={filterTag} />\n        {isShown && (\n          <SearchResults\n            id=\"src\"\n            query={searchQuery}\n            filter={filterTag}\n            results={results}\n            postEdges={postEdges}\n          />\n        )}\n        {!isShown && <PostListing id=\"modules\" postEdges={postEdges} />}\n      </div>\n      {!isFirst && (\n        <Link to={`${prefix}${prevPage}`} rel=\"prev\">\n          ← Previous Page\n        </Link>\n      )}\n      {!isLast && (\n        <Link to={`${prefix}${nextPage}`} rel=\"next\">\n          Next Page →\n        </Link>\n      )}\n    </Layout>\n  );\n};\n\n/* eslint no-undef: \"off\" */\nexport const moduleQuery = graphql`\n  query moduleQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { posttype: { eq: \"module\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            cover {\n              publicURL\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default modulelist;\n"],"sourceRoot":""}